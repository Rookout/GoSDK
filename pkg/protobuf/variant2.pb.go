// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.11.0
// source: variant2.proto

package protobuf2

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Error2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message    string    `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Type       string    `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Parameters *Variant2 `protobuf:"bytes,3,opt,name=parameters,proto3" json:"parameters,omitempty"`
	Exc        *Variant2 `protobuf:"bytes,4,opt,name=exc,proto3" json:"exc,omitempty"`
	Traceback  *Variant2 `protobuf:"bytes,5,opt,name=traceback,proto3" json:"traceback,omitempty"`
}

func (x *Error2) Reset() {
	*x = Error2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_variant2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error2) ProtoMessage() {}

func (x *Error2) ProtoReflect() protoreflect.Message {
	mi := &file_variant2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}


func (*Error2) Descriptor() ([]byte, []int) {
	return file_variant2_proto_rawDescGZIP(), []int{0}
}

func (x *Error2) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Error2) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Error2) GetParameters() *Variant2 {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *Error2) GetExc() *Variant2 {
	if x != nil {
		return x.Exc
	}
	return nil
}

func (x *Error2) GetTraceback() *Variant2 {
	if x != nil {
		return x.Traceback
	}
	return nil
}


type Variant2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	
	VariantTypeMaxDepth uint32 `protobuf:"varint,1,opt,name=variant_type_max_depth,json=variantTypeMaxDepth,proto3" json:"variant_type_max_depth,omitempty"`
	
	OriginalTypeIndexInCache uint32      `protobuf:"varint,2,opt,name=original_type_index_in_cache,json=originalTypeIndexInCache,proto3" json:"original_type_index_in_cache,omitempty"`
	AttributeNamesInCache    []uint32    `protobuf:"varint,3,rep,packed,name=attribute_names_in_cache,json=attributeNamesInCache,proto3" json:"attribute_names_in_cache,omitempty"`
	AttributeValues          []*Variant2 `protobuf:"bytes,4,rep,name=attribute_values,json=attributeValues,proto3" json:"attribute_values,omitempty"`
	
	OriginalSize uint32 `protobuf:"varint,5,opt,name=original_size,json=originalSize,proto3" json:"original_size,omitempty"`
	
	LongValue int64 `protobuf:"varint,6,opt,name=long_value,json=longValue,proto3" json:"long_value,omitempty"`
	
	BytesIndexInCache uint32                   `protobuf:"varint,7,opt,name=bytes_index_in_cache,json=bytesIndexInCache,proto3" json:"bytes_index_in_cache,omitempty"`
	CollectionKeys    []*Variant2              `protobuf:"bytes,8,rep,name=collection_keys,json=collectionKeys,proto3" json:"collection_keys,omitempty"`       
	CollectionValues  []*Variant2              `protobuf:"bytes,9,rep,name=collection_values,json=collectionValues,proto3" json:"collection_values,omitempty"` 
	DoubleValue       float64                  `protobuf:"fixed64,10,opt,name=double_value,json=doubleValue,proto3" json:"double_value,omitempty"`
	CodeValues        []*Variant_CodeObject    `protobuf:"bytes,11,rep,name=code_values,json=codeValues,proto3" json:"code_values,omitempty"`
	TimeValue         *timestamp.Timestamp     `protobuf:"bytes,12,opt,name=time_value,json=timeValue,proto3" json:"time_value,omitempty"`
	ErrorValue        *Error2                  `protobuf:"bytes,16,opt,name=error_value,json=errorValue,proto3" json:"error_value,omitempty"`
	ComplexValue      *Variant_Complex         `protobuf:"bytes,17,opt,name=complex_value,json=complexValue,proto3" json:"complex_value,omitempty"`
	Livetail          *Variant_LiveTailMessage `protobuf:"bytes,18,opt,name=livetail,proto3" json:"livetail,omitempty"`
}

func (x *Variant2) Reset() {
	*x = Variant2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_variant2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Variant2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Variant2) ProtoMessage() {}

func (x *Variant2) ProtoReflect() protoreflect.Message {
	mi := &file_variant2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}


func (*Variant2) Descriptor() ([]byte, []int) {
	return file_variant2_proto_rawDescGZIP(), []int{1}
}

func (x *Variant2) GetVariantTypeMaxDepth() uint32 {
	if x != nil {
		return x.VariantTypeMaxDepth
	}
	return 0
}

func (x *Variant2) GetOriginalTypeIndexInCache() uint32 {
	if x != nil {
		return x.OriginalTypeIndexInCache
	}
	return 0
}

func (x *Variant2) GetAttributeNamesInCache() []uint32 {
	if x != nil {
		return x.AttributeNamesInCache
	}
	return nil
}

func (x *Variant2) GetAttributeValues() []*Variant2 {
	if x != nil {
		return x.AttributeValues
	}
	return nil
}

func (x *Variant2) GetOriginalSize() uint32 {
	if x != nil {
		return x.OriginalSize
	}
	return 0
}

func (x *Variant2) GetLongValue() int64 {
	if x != nil {
		return x.LongValue
	}
	return 0
}

func (x *Variant2) GetBytesIndexInCache() uint32 {
	if x != nil {
		return x.BytesIndexInCache
	}
	return 0
}

func (x *Variant2) GetCollectionKeys() []*Variant2 {
	if x != nil {
		return x.CollectionKeys
	}
	return nil
}

func (x *Variant2) GetCollectionValues() []*Variant2 {
	if x != nil {
		return x.CollectionValues
	}
	return nil
}

func (x *Variant2) GetDoubleValue() float64 {
	if x != nil {
		return x.DoubleValue
	}
	return 0
}

func (x *Variant2) GetCodeValues() []*Variant_CodeObject {
	if x != nil {
		return x.CodeValues
	}
	return nil
}

func (x *Variant2) GetTimeValue() *timestamp.Timestamp {
	if x != nil {
		return x.TimeValue
	}
	return nil
}

func (x *Variant2) GetErrorValue() *Error2 {
	if x != nil {
		return x.ErrorValue
	}
	return nil
}

func (x *Variant2) GetComplexValue() *Variant_Complex {
	if x != nil {
		return x.ComplexValue
	}
	return nil
}

func (x *Variant2) GetLivetail() *Variant_LiveTailMessage {
	if x != nil {
		return x.Livetail
	}
	return nil
}

var File_variant2_proto protoreflect.FileDescriptor

var file_variant2_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x01,
	0x0a, 0x06, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x72, 0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x32, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a,
	0x03, 0x65, 0x78, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x72, 0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x32, 0x52, 0x03, 0x65, 0x78, 0x63, 0x12, 0x33, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x62,
	0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x72, 0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32,
	0x52, 0x09, 0x74, 0x72, 0x61, 0x63, 0x65, 0x62, 0x61, 0x63, 0x6b, 0x22, 0xce, 0x06, 0x0a, 0x08,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x12, 0x33, 0x0a, 0x16, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x76, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x78, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x3e, 0x0a,
	0x1c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x18, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x37, 0x0a,
	0x18, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x15, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x49,
	0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x40, 0x0a, 0x10, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x52, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x14,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x69, 0x6e, 0x5f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x3e, 0x0a,
	0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f,
	0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x52, 0x0e, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x42, 0x0a,
	0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72,
	0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x32, 0x52,
	0x10, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x72, 0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x64, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x64, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x34, 0x0a, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f,
	0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x52, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x78, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x56, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x52, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6c, 0x69,
	0x76, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x6c, 0x69, 0x76, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x4f, 0x0a, 0x19,
	0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x2e, 0x72, 0x6f, 0x6f, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x52, 0x6f, 0x6f, 0x6b, 0x6f, 0x75, 0x74, 0x2f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x32, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_variant2_proto_rawDescOnce sync.Once
	file_variant2_proto_rawDescData = file_variant2_proto_rawDesc
)

func file_variant2_proto_rawDescGZIP() []byte {
	file_variant2_proto_rawDescOnce.Do(func() {
		file_variant2_proto_rawDescData = protoimpl.X.CompressGZIP(file_variant2_proto_rawDescData)
	})
	return file_variant2_proto_rawDescData
}

var file_variant2_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_variant2_proto_goTypes = []interface{}{
	(*Error2)(nil),                  
	(*Variant2)(nil),                
	(*Variant_CodeObject)(nil),      
	(*timestamp.Timestamp)(nil),     
	(*Variant_Complex)(nil),         
	(*Variant_LiveTailMessage)(nil), 
}
var file_variant2_proto_depIdxs = []int32{
	1,  
	1,  
	1,  
	1,  
	1,  
	1,  
	2,  
	3,  
	0,  
	4,  
	5,  
	11, 
	11, 
	11, 
	11, 
	0,  
}

func init() { file_variant2_proto_init() }
func file_variant2_proto_init() {
	if File_variant2_proto != nil {
		return
	}
	file_variant_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_variant2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_variant2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Variant2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_variant2_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_variant2_proto_goTypes,
		DependencyIndexes: file_variant2_proto_depIdxs,
		MessageInfos:      file_variant2_proto_msgTypes,
	}.Build()
	File_variant2_proto = out.File
	file_variant2_proto_rawDesc = nil
	file_variant2_proto_goTypes = nil
	file_variant2_proto_depIdxs = nil
}
